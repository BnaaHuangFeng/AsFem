# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,devel ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-AsFem:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: show file structure
        run: |
          echo "******************************************************"
          echo "*** Current path is:"
          pwd
          echo "******************************************************"
          echo "*** Current folders are:"
          ls -l
      - name: check gcc/gfortran/cmake version
        run: |
          echo "******************************************************"
          echo "*** Check the version of gnu-c,c++,fortran compiler"
          echo "******************************************************"
          gcc --version
          g++ --version
          gfortran --version
          cmake --version
          echo "******************************************************"
          echo "*** Version check is done !"
          echo "******************************************************"
      - name: create temp folder and lib folder
        run: |
          echo "******************************************************"
          echo "*** Current folder structure is:"
          ls -l
          echo "******************************************************"
          echo "*** Now we start to create folder"
          echo "******************************************************"
          mkdir temp && mkdir AsFemLibs
          ls -l
          cd AsFemLibs && mkdir openmpi && mkdir petsc
          pwd
          echo "******************************************************"
          echo "*** Now we have the following folders:"
          ls -l
      - name: compile AsFem
        run: |
          cd /home/runner/work/AsFem/AsFem
          echo "******************************************************"
          echo "*** Setup mpi and petsc bash profile"
          echo "******************************************************"
          export MPI_DIR=/home/runner/work/AsFem/AsFem/AsFemLibs/openmpi
          export PATH=$PATH:$mpi/bin
          export OMP_NUM_THREADS=1
          export PETSC_DIR=/home/runner/work/AsFem/AsFem/AsFemLibs/petsc
          export C_INCLUDE_PATH=$mpi/include:$C_INCLUDE_PATH
          export CPLUS_INCLUDE_PATH=$mpi/include:$CPLUS_INCLUDE_PATH
          export FPATH=$mpi/include:$FPATH
          export MANPATH=$mpi/share/man:$MANPATH
          export LD_LIBRARY_PATH=$mpi/lib:$LD_LIBRARY_PATH
          echo $MPI_DIR
          echo $PETSC_DIR
          cmake CMakeLists.txt
          echo "******************************************************"
          echo "*** Make AsFem"
          echo "******************************************************""
          make -j8
          echo "******************************************************"
          echo "*** AsFem is successuflly installed !"
          echo "******************************************************"
      - name: run AsFem test script
        run: |
          cd /home/runner/work/AsFem/AsFem
          echo "******************************************************"
          echo "*** Start to run AsFem autotest"
          echo "******************************************************"
          ./scripts/AutoTest.py
      - name: clean all the folder and files
        run: |
          rm -rf temp
          rm -rf AsFemLibs
          ./script/Clean.py
          ls -l
          echo "******************************************************"
          echo "*** All the files are clean !"
          echo "******************************************************"
